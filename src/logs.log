2024-01-16 16:40:51,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-16 16:40:51,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-16 16:40:51,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-16 16:40:51,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-16 16:42:57,939:INFO:PyCaret ClassificationExperiment
2024-01-16 16:42:57,939:INFO:Logging name: clf-default-name
2024-01-16 16:42:57,939:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-01-16 16:42:57,939:INFO:version 3.2.0
2024-01-16 16:42:57,939:INFO:Initializing setup()
2024-01-16 16:42:57,939:INFO:self.USI: 37f5
2024-01-16 16:42:57,939:INFO:self._variable_keys: {'html_param', 'gpu_n_jobs_param', '_available_plots', 'fold_groups_param', 'fold_generator', 'X_train', 'y_test', 'target_param', 'n_jobs_param', 'USI', 'fold_shuffle_param', 'fix_imbalance', 'X', 'memory', 'X_test', 'seed', 'y_train', 'is_multiclass', 'exp_name_log', 'gpu_param', 'exp_id', 'logging_param', 'data', 'y', 'pipeline', 'log_plots_param', 'idx', '_ml_usecase'}
2024-01-16 16:42:57,939:INFO:Checking environment
2024-01-16 16:42:57,939:INFO:python_version: 3.9.6
2024-01-16 16:42:57,939:INFO:python_build: ('default', 'Dec  7 2023 05:42:47')
2024-01-16 16:42:57,939:INFO:machine: arm64
2024-01-16 16:42:57,939:INFO:platform: macOS-14.2.1-arm64-arm-64bit
2024-01-16 16:42:57,940:INFO:Memory: svmem(total=8589934592, available=2152644608, percent=74.9, used=3701243904, free=46448640, active=2118549504, inactive=2104492032, wired=1582694400)
2024-01-16 16:42:57,940:INFO:Physical Core: 8
2024-01-16 16:42:57,940:INFO:Logical Core: 8
2024-01-16 16:42:57,940:INFO:Checking libraries
2024-01-16 16:42:57,940:INFO:System:
2024-01-16 16:42:57,940:INFO:    python: 3.9.6 (default, Dec  7 2023, 05:42:47)  [Clang 15.0.0 (clang-1500.1.0.2.5)]
2024-01-16 16:42:57,940:INFO:executable: /Applications/Xcode.app/Contents/Developer/usr/bin/python3
2024-01-16 16:42:57,940:INFO:   machine: macOS-14.2.1-arm64-arm-64bit
2024-01-16 16:42:57,940:INFO:PyCaret required dependencies:
2024-01-16 16:42:58,425:INFO:                 pip: 21.2.4
2024-01-16 16:42:58,425:INFO:          setuptools: 58.0.4
2024-01-16 16:42:58,426:INFO:             pycaret: 3.2.0
2024-01-16 16:42:58,426:INFO:             IPython: 8.11.0
2024-01-16 16:42:58,426:INFO:          ipywidgets: 8.1.1
2024-01-16 16:42:58,426:INFO:                tqdm: 4.66.1
2024-01-16 16:42:58,426:INFO:               numpy: 1.23.1
2024-01-16 16:42:58,426:INFO:              pandas: 1.5.3
2024-01-16 16:42:58,426:INFO:              jinja2: 3.1.2
2024-01-16 16:42:58,426:INFO:               scipy: 1.10.1
2024-01-16 16:42:58,426:INFO:              joblib: 1.3.2
2024-01-16 16:42:58,426:INFO:             sklearn: 1.2.2
2024-01-16 16:42:58,426:INFO:                pyod: 1.1.2
2024-01-16 16:42:58,426:INFO:            imblearn: 0.11.0
2024-01-16 16:42:58,426:INFO:   category_encoders: 2.6.3
2024-01-16 16:42:58,426:INFO:            lightgbm: 4.2.0
2024-01-16 16:42:58,426:INFO:               numba: 0.58.1
2024-01-16 16:42:58,426:INFO:            requests: 2.31.0
2024-01-16 16:42:58,426:INFO:          matplotlib: 3.6.0
2024-01-16 16:42:58,426:INFO:          scikitplot: 0.3.7
2024-01-16 16:42:58,426:INFO:         yellowbrick: 1.5
2024-01-16 16:42:58,426:INFO:              plotly: 5.18.0
2024-01-16 16:42:58,426:INFO:    plotly-resampler: Not installed
2024-01-16 16:42:58,426:INFO:             kaleido: 0.2.1
2024-01-16 16:42:58,426:INFO:           schemdraw: 0.15
2024-01-16 16:42:58,426:INFO:         statsmodels: 0.14.1
2024-01-16 16:42:58,426:INFO:              sktime: 0.21.1
2024-01-16 16:42:58,426:INFO:               tbats: 1.1.3
2024-01-16 16:42:58,426:INFO:            pmdarima: 2.0.4
2024-01-16 16:42:58,426:INFO:              psutil: 5.9.4
2024-01-16 16:42:58,426:INFO:          markupsafe: 2.1.3
2024-01-16 16:42:58,426:INFO:             pickle5: Not installed
2024-01-16 16:42:58,426:INFO:         cloudpickle: 3.0.0
2024-01-16 16:42:58,426:INFO:         deprecation: 2.1.0
2024-01-16 16:42:58,426:INFO:              xxhash: 3.4.1
2024-01-16 16:42:58,426:INFO:           wurlitzer: 3.0.3
2024-01-16 16:42:58,426:INFO:PyCaret optional dependencies:
2024-01-16 16:42:58,436:INFO:                shap: Not installed
2024-01-16 16:42:58,437:INFO:           interpret: Not installed
2024-01-16 16:42:58,437:INFO:                umap: Not installed
2024-01-16 16:42:58,437:INFO:     ydata_profiling: Not installed
2024-01-16 16:42:58,437:INFO:  explainerdashboard: Not installed
2024-01-16 16:42:58,437:INFO:             autoviz: Not installed
2024-01-16 16:42:58,437:INFO:           fairlearn: Not installed
2024-01-16 16:42:58,437:INFO:          deepchecks: Not installed
2024-01-16 16:42:58,437:INFO:             xgboost: Not installed
2024-01-16 16:42:58,437:INFO:            catboost: Not installed
2024-01-16 16:42:58,437:INFO:              kmodes: Not installed
2024-01-16 16:42:58,437:INFO:             mlxtend: Not installed
2024-01-16 16:42:58,437:INFO:       statsforecast: Not installed
2024-01-16 16:42:58,437:INFO:        tune_sklearn: Not installed
2024-01-16 16:42:58,437:INFO:                 ray: Not installed
2024-01-16 16:42:58,437:INFO:            hyperopt: Not installed
2024-01-16 16:42:58,437:INFO:              optuna: Not installed
2024-01-16 16:42:58,437:INFO:               skopt: Not installed
2024-01-16 16:42:58,437:INFO:              mlflow: Not installed
2024-01-16 16:42:58,437:INFO:              gradio: Not installed
2024-01-16 16:42:58,437:INFO:             fastapi: Not installed
2024-01-16 16:42:58,437:INFO:             uvicorn: Not installed
2024-01-16 16:42:58,437:INFO:              m2cgen: Not installed
2024-01-16 16:42:58,437:INFO:           evidently: Not installed
2024-01-16 16:42:58,437:INFO:               fugue: Not installed
2024-01-16 16:42:58,437:INFO:           streamlit: 1.28.2
2024-01-16 16:42:58,437:INFO:             prophet: Not installed
2024-01-16 16:42:58,437:INFO:None
2024-01-16 16:42:58,437:INFO:Set up data.
2024-01-16 16:42:58,512:INFO:Set up folding strategy.
2024-01-16 16:42:58,512:INFO:Set up train/test split.
2024-01-16 16:42:58,574:INFO:Set up index.
2024-01-16 16:42:58,575:INFO:Assigning column types.
2024-01-16 16:42:58,580:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-01-16 16:42:58,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-01-16 16:42:58,600:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-16 16:42:58,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,632:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-01-16 16:42:58,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-16 16:42:58,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,643:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-01-16 16:42:58,661:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-16 16:42:58,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,690:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-16 16:42:58,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,701:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-01-16 16:42:58,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:42:58,763:INFO:Preparing preprocessing pipeline...
2024-01-16 16:42:58,765:INFO:Set up label encoding.
2024-01-16 16:42:58,765:INFO:Set up simple imputation.
2024-01-16 16:42:58,769:INFO:Set up encoding of ordinal features.
2024-01-16 16:42:58,772:INFO:Set up encoding of categorical features.
2024-01-16 16:42:58,772:INFO:Set up column name cleaning.
2024-01-16 16:42:59,356:INFO:Finished creating preprocessing pipeline.
2024-01-16 16:42:59,364:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/vm/5qmxs2qx4jqfzfp5dmt_3x900000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['대출금액', '연간소득', '부채_대비_소득_비율',
                                             '총계좌수', '최근_2년간_연체_횟수', '총상환원금',
                                             '총상환이자', '총연체금액', '연체계좌수'],
                                    tr...
                 TransformerWrapper(exclude=None, include=['ID'],
                                    transformer=TargetEncoder(cols=['ID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-01-16 16:42:59,364:INFO:Creating final display dataframe.
2024-01-16 16:43:00,183:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      5437
1                        Target                                      대출등급
2                   Target type                                Multiclass
3                Target mapping  A: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6
4           Original data shape                               (96294, 15)
5        Transformed data shape                               (96294, 44)
6   Transformed train set shape                               (67405, 44)
7    Transformed test set shape                               (28889, 44)
8              Ordinal features                                         1
9              Numeric features                                         9
10         Categorical features                                         5
11                   Preprocess                                      True
12              Imputation type                                    simple
13           Numeric imputation                                      mean
14       Categorical imputation                                      mode
15     Maximum one-hot encoding                                        25
16              Encoding method                                      None
17               Fold Generator                           StratifiedKFold
18                  Fold Number                                        10
19                     CPU Jobs                                        -1
20                      Use GPU                                     False
21               Log Experiment                                     False
22              Experiment Name                          clf-default-name
23                          USI                                      37f5
2024-01-16 16:43:00,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:43:00,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:43:00,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:43:00,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 16:43:00,253:INFO:setup() successfully completed in 2.32s...............
2024-01-16 16:43:00,253:INFO:Initializing compare_models()
2024-01-16 16:43:00,253:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-01-16 16:43:00,253:INFO:Checking exceptions
2024-01-16 16:43:00,259:INFO:Preparing display monitor
2024-01-16 16:43:00,313:INFO:Initializing Logistic Regression
2024-01-16 16:43:00,314:INFO:Total runtime is 2.634525299072266e-06 minutes
2024-01-16 16:43:00,315:INFO:SubProcess create_model() called ==================================
2024-01-16 16:43:00,315:INFO:Initializing create_model()
2024-01-16 16:43:00,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:43:00,315:INFO:Checking exceptions
2024-01-16 16:43:00,315:INFO:Importing libraries
2024-01-16 16:43:00,315:INFO:Copying training dataset
2024-01-16 16:43:00,328:INFO:Defining folds
2024-01-16 16:43:00,328:INFO:Declaring metric variables
2024-01-16 16:43:00,330:INFO:Importing untrained model
2024-01-16 16:43:00,332:INFO:Logistic Regression Imported successfully
2024-01-16 16:43:00,335:INFO:Starting cross validation
2024-01-16 16:43:00,337:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:43:22,057:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:22,180:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,209:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,229:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:22,241:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,516:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:22,554:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:22,639:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,640:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:22,667:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,671:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,690:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:22,712:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,716:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,749:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:22,771:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,797:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,821:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:22,839:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,846:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:22,863:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:22,876:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,912:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:22,963:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,990:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:22,996:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:23,023:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:23,032:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:23,034:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:23,039:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:23,048:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:23,062:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:23,065:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:23,086:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:23,099:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:23,262:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:23,352:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:23,377:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:23,401:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:33,055:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:33,119:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:33,140:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:33,152:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:33,162:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:33,367:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:43:33,428:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:33,448:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:33,460:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:33,469:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:33,613:INFO:Calculating mean and std
2024-01-16 16:43:33,616:INFO:Creating metrics dataframe
2024-01-16 16:43:33,624:INFO:Uploading results into container
2024-01-16 16:43:33,624:INFO:Uploading model into container now
2024-01-16 16:43:33,625:INFO:_master_model_container: 1
2024-01-16 16:43:33,626:INFO:_display_container: 2
2024-01-16 16:43:33,626:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 16:43:33,626:INFO:create_model() successfully completed......................................
2024-01-16 16:43:33,724:INFO:SubProcess create_model() end ==================================
2024-01-16 16:43:33,724:INFO:Creating metrics dataframe
2024-01-16 16:43:33,728:INFO:Initializing K Neighbors Classifier
2024-01-16 16:43:33,728:INFO:Total runtime is 0.5569098154703775 minutes
2024-01-16 16:43:33,729:INFO:SubProcess create_model() called ==================================
2024-01-16 16:43:33,730:INFO:Initializing create_model()
2024-01-16 16:43:33,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:43:33,730:INFO:Checking exceptions
2024-01-16 16:43:33,730:INFO:Importing libraries
2024-01-16 16:43:33,730:INFO:Copying training dataset
2024-01-16 16:43:33,741:INFO:Defining folds
2024-01-16 16:43:33,742:INFO:Declaring metric variables
2024-01-16 16:43:33,743:INFO:Importing untrained model
2024-01-16 16:43:33,745:INFO:K Neighbors Classifier Imported successfully
2024-01-16 16:43:33,747:INFO:Starting cross validation
2024-01-16 16:43:33,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:43:39,061:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,091:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,110:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:39,128:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,310:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,316:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,340:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,349:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,364:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:39,365:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,365:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,374:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,396:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,410:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:39,421:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,468:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,493:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,506:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,522:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,536:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,565:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,687:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,712:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,727:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:39,738:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,905:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,929:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:39,952:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:42,398:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:42,420:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:42,441:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:42,561:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:42,581:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:42,602:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:42,745:INFO:Calculating mean and std
2024-01-16 16:43:42,748:INFO:Creating metrics dataframe
2024-01-16 16:43:42,755:INFO:Uploading results into container
2024-01-16 16:43:42,756:INFO:Uploading model into container now
2024-01-16 16:43:42,756:INFO:_master_model_container: 2
2024-01-16 16:43:42,757:INFO:_display_container: 2
2024-01-16 16:43:42,757:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-01-16 16:43:42,757:INFO:create_model() successfully completed......................................
2024-01-16 16:43:42,840:INFO:SubProcess create_model() end ==================================
2024-01-16 16:43:42,840:INFO:Creating metrics dataframe
2024-01-16 16:43:42,845:INFO:Initializing Naive Bayes
2024-01-16 16:43:42,845:INFO:Total runtime is 0.7088544170061747 minutes
2024-01-16 16:43:42,846:INFO:SubProcess create_model() called ==================================
2024-01-16 16:43:42,846:INFO:Initializing create_model()
2024-01-16 16:43:42,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:43:42,846:INFO:Checking exceptions
2024-01-16 16:43:42,846:INFO:Importing libraries
2024-01-16 16:43:42,846:INFO:Copying training dataset
2024-01-16 16:43:42,857:INFO:Defining folds
2024-01-16 16:43:42,857:INFO:Declaring metric variables
2024-01-16 16:43:42,859:INFO:Importing untrained model
2024-01-16 16:43:42,861:INFO:Naive Bayes Imported successfully
2024-01-16 16:43:42,863:INFO:Starting cross validation
2024-01-16 16:43:42,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:43:43,969:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,011:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,035:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,057:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,075:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,092:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,112:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,118:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,125:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,131:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,162:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,168:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,169:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,170:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,191:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,191:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,207:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,213:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,214:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,225:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,248:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,249:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,276:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,299:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,583:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,605:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,612:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,626:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,633:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,654:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:44,786:INFO:Calculating mean and std
2024-01-16 16:43:44,788:INFO:Creating metrics dataframe
2024-01-16 16:43:44,793:INFO:Uploading results into container
2024-01-16 16:43:44,794:INFO:Uploading model into container now
2024-01-16 16:43:44,794:INFO:_master_model_container: 3
2024-01-16 16:43:44,794:INFO:_display_container: 2
2024-01-16 16:43:44,795:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-01-16 16:43:44,795:INFO:create_model() successfully completed......................................
2024-01-16 16:43:44,877:INFO:SubProcess create_model() end ==================================
2024-01-16 16:43:44,877:INFO:Creating metrics dataframe
2024-01-16 16:43:44,882:INFO:Initializing Decision Tree Classifier
2024-01-16 16:43:44,882:INFO:Total runtime is 0.7428098996480306 minutes
2024-01-16 16:43:44,884:INFO:SubProcess create_model() called ==================================
2024-01-16 16:43:44,884:INFO:Initializing create_model()
2024-01-16 16:43:44,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:43:44,884:INFO:Checking exceptions
2024-01-16 16:43:44,884:INFO:Importing libraries
2024-01-16 16:43:44,884:INFO:Copying training dataset
2024-01-16 16:43:44,894:INFO:Defining folds
2024-01-16 16:43:44,894:INFO:Declaring metric variables
2024-01-16 16:43:44,896:INFO:Importing untrained model
2024-01-16 16:43:44,898:INFO:Decision Tree Classifier Imported successfully
2024-01-16 16:43:44,900:INFO:Starting cross validation
2024-01-16 16:43:44,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:43:46,002:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,018:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,037:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,049:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,053:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,072:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,073:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,083:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,087:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,096:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,097:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,100:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,113:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,123:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,125:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,130:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,132:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,138:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,142:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,146:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,149:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,153:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,159:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,161:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,167:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,183:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,199:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,208:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,216:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,238:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,250:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,259:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,580:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,600:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,611:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,620:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,626:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,646:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,657:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:46,666:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:46,802:INFO:Calculating mean and std
2024-01-16 16:43:46,805:INFO:Creating metrics dataframe
2024-01-16 16:43:46,811:INFO:Uploading results into container
2024-01-16 16:43:46,812:INFO:Uploading model into container now
2024-01-16 16:43:46,813:INFO:_master_model_container: 4
2024-01-16 16:43:46,813:INFO:_display_container: 2
2024-01-16 16:43:46,814:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5437, splitter='best')
2024-01-16 16:43:46,814:INFO:create_model() successfully completed......................................
2024-01-16 16:43:46,896:INFO:SubProcess create_model() end ==================================
2024-01-16 16:43:46,896:INFO:Creating metrics dataframe
2024-01-16 16:43:46,901:INFO:Initializing SVM - Linear Kernel
2024-01-16 16:43:46,901:INFO:Total runtime is 0.7764559149742126 minutes
2024-01-16 16:43:46,902:INFO:SubProcess create_model() called ==================================
2024-01-16 16:43:46,902:INFO:Initializing create_model()
2024-01-16 16:43:46,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:43:46,903:INFO:Checking exceptions
2024-01-16 16:43:46,903:INFO:Importing libraries
2024-01-16 16:43:46,903:INFO:Copying training dataset
2024-01-16 16:43:46,915:INFO:Defining folds
2024-01-16 16:43:46,915:INFO:Declaring metric variables
2024-01-16 16:43:46,917:INFO:Importing untrained model
2024-01-16 16:43:46,918:INFO:SVM - Linear Kernel Imported successfully
2024-01-16 16:43:46,921:INFO:Starting cross validation
2024-01-16 16:43:46,922:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:43:53,496:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:53,505:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,563:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,570:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:53,578:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:53,586:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,615:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,632:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,657:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:53,667:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,680:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:53,690:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,700:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,713:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:53,729:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,839:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:53,849:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,877:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:53,889:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:53,902:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,102:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:54,113:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,137:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,152:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:54,162:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,321:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:54,332:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,373:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,397:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:54,407:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,426:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:54,449:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,524:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,589:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:54,594:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:54,619:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,621:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,711:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:54,743:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:54,755:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:55,859:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:55,868:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:55,870:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 16:43:55,879:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:55,890:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:55,902:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:55,902:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:55,910:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:55,915:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:55,924:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:56,061:INFO:Calculating mean and std
2024-01-16 16:43:56,063:INFO:Creating metrics dataframe
2024-01-16 16:43:56,067:INFO:Uploading results into container
2024-01-16 16:43:56,068:INFO:Uploading model into container now
2024-01-16 16:43:56,068:INFO:_master_model_container: 5
2024-01-16 16:43:56,068:INFO:_display_container: 2
2024-01-16 16:43:56,069:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5437, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-01-16 16:43:56,069:INFO:create_model() successfully completed......................................
2024-01-16 16:43:56,172:INFO:SubProcess create_model() end ==================================
2024-01-16 16:43:56,172:INFO:Creating metrics dataframe
2024-01-16 16:43:56,178:INFO:Initializing Ridge Classifier
2024-01-16 16:43:56,178:INFO:Total runtime is 0.9310762524604796 minutes
2024-01-16 16:43:56,180:INFO:SubProcess create_model() called ==================================
2024-01-16 16:43:56,180:INFO:Initializing create_model()
2024-01-16 16:43:56,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:43:56,180:INFO:Checking exceptions
2024-01-16 16:43:56,180:INFO:Importing libraries
2024-01-16 16:43:56,180:INFO:Copying training dataset
2024-01-16 16:43:56,192:INFO:Defining folds
2024-01-16 16:43:56,192:INFO:Declaring metric variables
2024-01-16 16:43:56,193:INFO:Importing untrained model
2024-01-16 16:43:56,195:INFO:Ridge Classifier Imported successfully
2024-01-16 16:43:56,198:INFO:Starting cross validation
2024-01-16 16:43:56,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:43:57,281:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.58345e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:57,389:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.60113e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:57,429:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.82155e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:57,435:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:57,447:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.89425e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:57,452:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,505:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,518:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.66643e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:57,524:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:57,532:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:57,542:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,544:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:57,559:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,560:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.595e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:57,564:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:57,570:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,582:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,589:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.59128e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:57,594:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,596:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,608:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,612:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:57,613:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:57,613:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:57,622:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:57,626:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,626:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,631:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,632:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,632:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.64769e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:57,634:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:57,641:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:57,647:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,651:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,651:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,662:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,665:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:57,681:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:57,683:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,685:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,687:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:57,691:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,697:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,703:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:57,717:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,722:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:57,735:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:57,745:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:58,048:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.00856e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:58,069:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.59157e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 16:43:58,088:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:58,097:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:58,107:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 16:43:58,115:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:58,119:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:58,131:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:58,137:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:58,140:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:58,149:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:43:58,158:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:43:58,296:INFO:Calculating mean and std
2024-01-16 16:43:58,299:INFO:Creating metrics dataframe
2024-01-16 16:43:58,304:INFO:Uploading results into container
2024-01-16 16:43:58,304:INFO:Uploading model into container now
2024-01-16 16:43:58,305:INFO:_master_model_container: 6
2024-01-16 16:43:58,305:INFO:_display_container: 2
2024-01-16 16:43:58,306:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5437, solver='auto',
                tol=0.0001)
2024-01-16 16:43:58,306:INFO:create_model() successfully completed......................................
2024-01-16 16:43:58,395:INFO:SubProcess create_model() end ==================================
2024-01-16 16:43:58,395:INFO:Creating metrics dataframe
2024-01-16 16:43:58,400:INFO:Initializing Random Forest Classifier
2024-01-16 16:43:58,400:INFO:Total runtime is 0.968106730779012 minutes
2024-01-16 16:43:58,401:INFO:SubProcess create_model() called ==================================
2024-01-16 16:43:58,401:INFO:Initializing create_model()
2024-01-16 16:43:58,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:43:58,402:INFO:Checking exceptions
2024-01-16 16:43:58,402:INFO:Importing libraries
2024-01-16 16:43:58,402:INFO:Copying training dataset
2024-01-16 16:43:58,413:INFO:Defining folds
2024-01-16 16:43:58,413:INFO:Declaring metric variables
2024-01-16 16:43:58,414:INFO:Importing untrained model
2024-01-16 16:43:58,416:INFO:Random Forest Classifier Imported successfully
2024-01-16 16:43:58,418:INFO:Starting cross validation
2024-01-16 16:43:58,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:44:06,012:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,069:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,106:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,118:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,121:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,122:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,131:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,143:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,147:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:06,148:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,150:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,156:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:06,161:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,162:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:06,167:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:06,168:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,170:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:06,178:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,180:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,181:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,356:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,379:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,385:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,387:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,402:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:06,407:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,410:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,417:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,422:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:06,425:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:06,432:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:06,434:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:08,254:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:08,268:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:08,275:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:08,286:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:08,288:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:08,295:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:08,300:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:08,309:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:08,445:INFO:Calculating mean and std
2024-01-16 16:44:08,447:INFO:Creating metrics dataframe
2024-01-16 16:44:08,452:INFO:Uploading results into container
2024-01-16 16:44:08,453:INFO:Uploading model into container now
2024-01-16 16:44:08,453:INFO:_master_model_container: 7
2024-01-16 16:44:08,453:INFO:_display_container: 2
2024-01-16 16:44:08,454:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5437, verbose=0, warm_start=False)
2024-01-16 16:44:08,454:INFO:create_model() successfully completed......................................
2024-01-16 16:44:08,535:INFO:SubProcess create_model() end ==================================
2024-01-16 16:44:08,535:INFO:Creating metrics dataframe
2024-01-16 16:44:08,540:INFO:Initializing Quadratic Discriminant Analysis
2024-01-16 16:44:08,541:INFO:Total runtime is 1.1371195157368978 minutes
2024-01-16 16:44:08,542:INFO:SubProcess create_model() called ==================================
2024-01-16 16:44:08,542:INFO:Initializing create_model()
2024-01-16 16:44:08,542:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:44:08,542:INFO:Checking exceptions
2024-01-16 16:44:08,543:INFO:Importing libraries
2024-01-16 16:44:08,543:INFO:Copying training dataset
2024-01-16 16:44:08,553:INFO:Defining folds
2024-01-16 16:44:08,553:INFO:Declaring metric variables
2024-01-16 16:44:08,555:INFO:Importing untrained model
2024-01-16 16:44:08,556:INFO:Quadratic Discriminant Analysis Imported successfully
2024-01-16 16:44:08,559:INFO:Starting cross validation
2024-01-16 16:44:08,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:44:09,411:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:09,572:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:09,575:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:09,672:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:09,693:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:09,748:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:09,776:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:09,807:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:09,815:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:09,847:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:09,878:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:09,895:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:09,920:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:09,931:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:09,941:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:09,958:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:09,972:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,009:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,035:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,038:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:10,059:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,073:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,074:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,090:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,105:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,106:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:10,107:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:10,121:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,121:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,122:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,134:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,148:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,153:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:10,162:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:10,166:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,173:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,203:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,225:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,237:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:10,247:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,410:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:10,461:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 16:44:10,560:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,581:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,593:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:10,602:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,607:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,628:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,640:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:10,648:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:10,784:INFO:Calculating mean and std
2024-01-16 16:44:10,786:INFO:Creating metrics dataframe
2024-01-16 16:44:10,793:INFO:Uploading results into container
2024-01-16 16:44:10,794:INFO:Uploading model into container now
2024-01-16 16:44:10,795:INFO:_master_model_container: 8
2024-01-16 16:44:10,795:INFO:_display_container: 2
2024-01-16 16:44:10,796:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-01-16 16:44:10,796:INFO:create_model() successfully completed......................................
2024-01-16 16:44:10,884:INFO:SubProcess create_model() end ==================================
2024-01-16 16:44:10,884:INFO:Creating metrics dataframe
2024-01-16 16:44:10,889:INFO:Initializing Ada Boost Classifier
2024-01-16 16:44:10,889:INFO:Total runtime is 1.176265549659729 minutes
2024-01-16 16:44:10,891:INFO:SubProcess create_model() called ==================================
2024-01-16 16:44:10,891:INFO:Initializing create_model()
2024-01-16 16:44:10,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:44:10,891:INFO:Checking exceptions
2024-01-16 16:44:10,891:INFO:Importing libraries
2024-01-16 16:44:10,891:INFO:Copying training dataset
2024-01-16 16:44:10,903:INFO:Defining folds
2024-01-16 16:44:10,903:INFO:Declaring metric variables
2024-01-16 16:44:10,905:INFO:Importing untrained model
2024-01-16 16:44:10,907:INFO:Ada Boost Classifier Imported successfully
2024-01-16 16:44:10,909:INFO:Starting cross validation
2024-01-16 16:44:10,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:44:15,283:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,325:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,330:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,335:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,349:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:15,361:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,363:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,366:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,377:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,381:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:15,385:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,393:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,402:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:15,416:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:15,419:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,427:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,461:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,472:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,479:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,489:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,492:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,502:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,505:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:15,514:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,516:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:15,516:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,518:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,527:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,528:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:15,531:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:15,538:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:15,544:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:17,952:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:17,972:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:17,985:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:17,993:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:17,994:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:18,013:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:18,025:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:44:18,033:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:44:18,173:INFO:Calculating mean and std
2024-01-16 16:44:18,175:INFO:Creating metrics dataframe
2024-01-16 16:44:18,180:INFO:Uploading results into container
2024-01-16 16:44:18,180:INFO:Uploading model into container now
2024-01-16 16:44:18,181:INFO:_master_model_container: 9
2024-01-16 16:44:18,181:INFO:_display_container: 2
2024-01-16 16:44:18,182:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5437)
2024-01-16 16:44:18,182:INFO:create_model() successfully completed......................................
2024-01-16 16:44:18,264:INFO:SubProcess create_model() end ==================================
2024-01-16 16:44:18,264:INFO:Creating metrics dataframe
2024-01-16 16:44:18,270:INFO:Initializing Gradient Boosting Classifier
2024-01-16 16:44:18,270:INFO:Total runtime is 1.2992805997530619 minutes
2024-01-16 16:44:18,272:INFO:SubProcess create_model() called ==================================
2024-01-16 16:44:18,272:INFO:Initializing create_model()
2024-01-16 16:44:18,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:44:18,272:INFO:Checking exceptions
2024-01-16 16:44:18,272:INFO:Importing libraries
2024-01-16 16:44:18,272:INFO:Copying training dataset
2024-01-16 16:44:18,283:INFO:Defining folds
2024-01-16 16:44:18,283:INFO:Declaring metric variables
2024-01-16 16:44:18,285:INFO:Importing untrained model
2024-01-16 16:44:18,286:INFO:Gradient Boosting Classifier Imported successfully
2024-01-16 16:44:18,289:INFO:Starting cross validation
2024-01-16 16:44:18,291:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:45:27,321:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,355:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,376:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:45:27,388:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,545:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,579:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,598:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:45:27,609:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,718:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,735:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,751:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,770:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,771:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:45:27,781:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,789:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:45:27,801:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,807:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,838:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,839:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,856:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:45:27,868:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,870:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:27,884:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:45:27,896:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:28,041:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:28,067:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:28,081:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:45:28,091:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:28,119:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:28,144:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:45:28,158:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:45:28,168:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:13,777:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:13,799:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:13,811:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:13,820:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:13,874:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:13,894:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:13,905:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:13,914:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:14,054:INFO:Calculating mean and std
2024-01-16 16:46:14,057:INFO:Creating metrics dataframe
2024-01-16 16:46:14,063:INFO:Uploading results into container
2024-01-16 16:46:14,064:INFO:Uploading model into container now
2024-01-16 16:46:14,065:INFO:_master_model_container: 10
2024-01-16 16:46:14,065:INFO:_display_container: 2
2024-01-16 16:46:14,066:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5437, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-01-16 16:46:14,066:INFO:create_model() successfully completed......................................
2024-01-16 16:46:14,163:INFO:SubProcess create_model() end ==================================
2024-01-16 16:46:14,163:INFO:Creating metrics dataframe
2024-01-16 16:46:14,169:INFO:Initializing Linear Discriminant Analysis
2024-01-16 16:46:14,169:INFO:Total runtime is 3.230919686953227 minutes
2024-01-16 16:46:14,170:INFO:SubProcess create_model() called ==================================
2024-01-16 16:46:14,171:INFO:Initializing create_model()
2024-01-16 16:46:14,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:46:14,171:INFO:Checking exceptions
2024-01-16 16:46:14,171:INFO:Importing libraries
2024-01-16 16:46:14,171:INFO:Copying training dataset
2024-01-16 16:46:14,184:INFO:Defining folds
2024-01-16 16:46:14,184:INFO:Declaring metric variables
2024-01-16 16:46:14,187:INFO:Importing untrained model
2024-01-16 16:46:14,189:INFO:Linear Discriminant Analysis Imported successfully
2024-01-16 16:46:14,193:INFO:Starting cross validation
2024-01-16 16:46:14,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:46:16,408:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,422:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,447:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,459:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,469:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,479:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:16,488:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:16,490:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,492:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,504:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,504:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,508:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:16,525:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,546:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,581:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:16,598:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,639:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,639:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,659:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,663:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,664:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,667:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,681:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:16,686:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,688:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,688:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:16,692:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,697:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,703:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:16,703:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:16,714:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:16,714:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:17,244:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:17,245:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:17,266:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:17,266:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:17,278:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:17,278:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:17,287:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:17,287:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:17,432:INFO:Calculating mean and std
2024-01-16 16:46:17,435:INFO:Creating metrics dataframe
2024-01-16 16:46:17,440:INFO:Uploading results into container
2024-01-16 16:46:17,441:INFO:Uploading model into container now
2024-01-16 16:46:17,442:INFO:_master_model_container: 11
2024-01-16 16:46:17,442:INFO:_display_container: 2
2024-01-16 16:46:17,442:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-01-16 16:46:17,442:INFO:create_model() successfully completed......................................
2024-01-16 16:46:17,527:INFO:SubProcess create_model() end ==================================
2024-01-16 16:46:17,527:INFO:Creating metrics dataframe
2024-01-16 16:46:17,533:INFO:Initializing Extra Trees Classifier
2024-01-16 16:46:17,533:INFO:Total runtime is 3.2869871497154235 minutes
2024-01-16 16:46:17,534:INFO:SubProcess create_model() called ==================================
2024-01-16 16:46:17,534:INFO:Initializing create_model()
2024-01-16 16:46:17,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:46:17,535:INFO:Checking exceptions
2024-01-16 16:46:17,535:INFO:Importing libraries
2024-01-16 16:46:17,535:INFO:Copying training dataset
2024-01-16 16:46:17,546:INFO:Defining folds
2024-01-16 16:46:17,546:INFO:Declaring metric variables
2024-01-16 16:46:17,547:INFO:Importing untrained model
2024-01-16 16:46:17,549:INFO:Extra Trees Classifier Imported successfully
2024-01-16 16:46:17,552:INFO:Starting cross validation
2024-01-16 16:46:17,553:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:46:26,275:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,349:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,476:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,549:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,567:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,578:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:26,588:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,598:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,599:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:26,666:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,687:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,691:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,726:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,769:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:26,779:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,781:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:26,791:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,857:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,871:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,871:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:26,881:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,932:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:26,952:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:26,980:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:27,003:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:27,030:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:27,055:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:27,066:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:27,098:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:27,122:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:27,136:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:27,146:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:28,829:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:28,850:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:28,863:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:28,872:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:28,887:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:28,908:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:28,921:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:28,930:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:29,076:INFO:Calculating mean and std
2024-01-16 16:46:29,078:INFO:Creating metrics dataframe
2024-01-16 16:46:29,082:INFO:Uploading results into container
2024-01-16 16:46:29,082:INFO:Uploading model into container now
2024-01-16 16:46:29,083:INFO:_master_model_container: 12
2024-01-16 16:46:29,083:INFO:_display_container: 2
2024-01-16 16:46:29,084:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5437, verbose=0, warm_start=False)
2024-01-16 16:46:29,084:INFO:create_model() successfully completed......................................
2024-01-16 16:46:29,163:INFO:SubProcess create_model() end ==================================
2024-01-16 16:46:29,163:INFO:Creating metrics dataframe
2024-01-16 16:46:29,169:INFO:Initializing Light Gradient Boosting Machine
2024-01-16 16:46:29,169:INFO:Total runtime is 3.4809277653694153 minutes
2024-01-16 16:46:29,171:INFO:SubProcess create_model() called ==================================
2024-01-16 16:46:29,171:INFO:Initializing create_model()
2024-01-16 16:46:29,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:46:29,171:INFO:Checking exceptions
2024-01-16 16:46:29,171:INFO:Importing libraries
2024-01-16 16:46:29,171:INFO:Copying training dataset
2024-01-16 16:46:29,182:INFO:Defining folds
2024-01-16 16:46:29,182:INFO:Declaring metric variables
2024-01-16 16:46:29,184:INFO:Importing untrained model
2024-01-16 16:46:29,185:INFO:Light Gradient Boosting Machine Imported successfully
2024-01-16 16:46:29,188:INFO:Starting cross validation
2024-01-16 16:46:29,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:46:36,564:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-01-16 16:46:36,577:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001876 seconds.
2024-01-16 16:46:36,577:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-01-16 16:46:36,577:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-01-16 16:46:36,577:INFO:[LightGBM] [Info] Total Bins 1489
2024-01-16 16:46:36,578:INFO:[LightGBM] [Info] Number of data points in the train set: 60665, number of used features: 42
2024-01-16 16:46:36,579:INFO:[LightGBM] [Info] Start training from score -1.747726
2024-01-16 16:46:36,579:INFO:[LightGBM] [Info] Start training from score -1.206476
2024-01-16 16:46:36,580:INFO:[LightGBM] [Info] Start training from score -1.248782
2024-01-16 16:46:36,580:INFO:[LightGBM] [Info] Start training from score -1.975470
2024-01-16 16:46:36,580:INFO:[LightGBM] [Info] Start training from score -2.572162
2024-01-16 16:46:36,580:INFO:[LightGBM] [Info] Start training from score -3.897540
2024-01-16 16:46:36,580:INFO:[LightGBM] [Info] Start training from score -5.433392
2024-01-16 16:46:36,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:36,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,732:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:37,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:38,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,416:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:39,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:40,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:40,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:40,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:40,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:41,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:41,431:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,536:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,539:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,551:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:41,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:41,567:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,590:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,591:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,605:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,608:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:41,618:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,648:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,667:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,712:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:41,726:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,732:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:41,743:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,916:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,920:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:41,940:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:41,962:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:41,978:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:41,993:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:42,005:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:42,013:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:42,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,197:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:42,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,222:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:42,236:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:42,246:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:42,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,549:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,912:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:42,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,493:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,528:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,528:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,541:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,604:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,707:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:43,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,057:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-01-16 16:46:44,314:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:44,339:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:44,353:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:44,363:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:45,983:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:46,007:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:46,013:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:46,020:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:46,030:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:46,036:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:46,049:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:46,060:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:46,211:INFO:Calculating mean and std
2024-01-16 16:46:46,213:INFO:Creating metrics dataframe
2024-01-16 16:46:46,220:INFO:Uploading results into container
2024-01-16 16:46:46,220:INFO:Uploading model into container now
2024-01-16 16:46:46,221:INFO:_master_model_container: 13
2024-01-16 16:46:46,221:INFO:_display_container: 2
2024-01-16 16:46:46,222:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5437, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-01-16 16:46:46,222:INFO:create_model() successfully completed......................................
2024-01-16 16:46:46,314:INFO:SubProcess create_model() end ==================================
2024-01-16 16:46:46,314:INFO:Creating metrics dataframe
2024-01-16 16:46:46,319:INFO:Initializing Dummy Classifier
2024-01-16 16:46:46,320:INFO:Total runtime is 3.7667691508928933 minutes
2024-01-16 16:46:46,321:INFO:SubProcess create_model() called ==================================
2024-01-16 16:46:46,321:INFO:Initializing create_model()
2024-01-16 16:46:46,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28c63cfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:46:46,322:INFO:Checking exceptions
2024-01-16 16:46:46,322:INFO:Importing libraries
2024-01-16 16:46:46,322:INFO:Copying training dataset
2024-01-16 16:46:46,333:INFO:Defining folds
2024-01-16 16:46:46,333:INFO:Declaring metric variables
2024-01-16 16:46:46,335:INFO:Importing untrained model
2024-01-16 16:46:46,336:INFO:Dummy Classifier Imported successfully
2024-01-16 16:46:46,339:INFO:Starting cross validation
2024-01-16 16:46:46,341:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:46:47,535:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,544:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,572:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,576:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,577:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,593:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:47,598:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:47,613:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,617:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,617:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,641:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:47,659:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,712:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,764:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,767:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,784:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:47,798:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,810:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,813:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,823:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,830:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:47,845:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,845:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,847:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,855:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,867:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:47,868:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:47,879:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,881:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,883:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:47,898:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:47,910:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:48,235:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:48,249:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:48,257:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:48,269:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:48,271:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:48,278:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:48,283:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:46:48,292:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:46:48,438:INFO:Calculating mean and std
2024-01-16 16:46:48,441:INFO:Creating metrics dataframe
2024-01-16 16:46:48,446:INFO:Uploading results into container
2024-01-16 16:46:48,447:INFO:Uploading model into container now
2024-01-16 16:46:48,448:INFO:_master_model_container: 14
2024-01-16 16:46:48,448:INFO:_display_container: 2
2024-01-16 16:46:48,449:INFO:DummyClassifier(constant=None, random_state=5437, strategy='prior')
2024-01-16 16:46:48,449:INFO:create_model() successfully completed......................................
2024-01-16 16:46:48,535:INFO:SubProcess create_model() end ==================================
2024-01-16 16:46:48,535:INFO:Creating metrics dataframe
2024-01-16 16:46:48,545:INFO:Initializing create_model()
2024-01-16 16:46:48,545:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:46:48,545:INFO:Checking exceptions
2024-01-16 16:46:48,546:INFO:Importing libraries
2024-01-16 16:46:48,546:INFO:Copying training dataset
2024-01-16 16:46:48,558:INFO:Defining folds
2024-01-16 16:46:48,558:INFO:Declaring metric variables
2024-01-16 16:46:48,558:INFO:Importing untrained model
2024-01-16 16:46:48,558:INFO:Declaring custom model
2024-01-16 16:46:48,558:INFO:Logistic Regression Imported successfully
2024-01-16 16:46:48,560:INFO:Cross validation set to False
2024-01-16 16:46:48,560:INFO:Fitting Model
2024-01-16 16:47:22,063:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:22,074:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 16:47:22,074:INFO:create_model() successfully completed......................................
2024-01-16 16:47:22,218:INFO:_master_model_container: 14
2024-01-16 16:47:22,219:INFO:_display_container: 2
2024-01-16 16:47:22,219:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 16:47:22,219:INFO:compare_models() successfully completed......................................
2024-01-16 16:47:22,220:INFO:Initializing create_model()
2024-01-16 16:47:22,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:47:22,220:INFO:Checking exceptions
2024-01-16 16:47:22,254:INFO:Importing libraries
2024-01-16 16:47:22,254:INFO:Copying training dataset
2024-01-16 16:47:22,281:INFO:Defining folds
2024-01-16 16:47:22,281:INFO:Declaring metric variables
2024-01-16 16:47:22,283:INFO:Importing untrained model
2024-01-16 16:47:22,283:INFO:Declaring custom model
2024-01-16 16:47:22,285:INFO:Logistic Regression Imported successfully
2024-01-16 16:47:22,288:INFO:Starting cross validation
2024-01-16 16:47:22,290:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:47:44,404:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:44,473:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:44,552:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,592:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,602:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,613:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:47:44,630:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,642:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,679:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:47:44,691:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,707:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:44,758:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:44,796:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:44,853:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,905:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,907:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:44,916:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,926:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:47:44,928:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,942:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,957:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,964:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:44,978:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:47:44,988:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:47:44,996:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,003:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,041:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,077:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,114:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,156:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:45,221:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:45,286:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,315:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,332:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,332:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:47:45,345:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,360:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:45,381:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:47:45,395:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:56,532:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:56,559:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:47:56,599:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:56,622:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:56,625:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:56,635:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:47:56,645:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:56,648:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:56,662:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:47:56,672:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:47:56,813:INFO:Calculating mean and std
2024-01-16 16:47:56,817:INFO:Creating metrics dataframe
2024-01-16 16:47:56,824:INFO:Finalizing model
2024-01-16 16:48:28,429:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:48:28,459:INFO:Uploading results into container
2024-01-16 16:48:28,460:INFO:Uploading model into container now
2024-01-16 16:48:28,480:INFO:_master_model_container: 15
2024-01-16 16:48:28,480:INFO:_display_container: 3
2024-01-16 16:48:28,481:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 16:48:28,481:INFO:create_model() successfully completed......................................
2024-01-16 16:48:28,628:INFO:Initializing tune_model()
2024-01-16 16:48:28,628:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>)
2024-01-16 16:48:28,628:INFO:Checking exceptions
2024-01-16 16:48:28,692:INFO:Copying training dataset
2024-01-16 16:48:28,704:INFO:Checking base model
2024-01-16 16:48:28,704:INFO:Base model : Logistic Regression
2024-01-16 16:48:28,706:INFO:Declaring metric variables
2024-01-16 16:48:28,707:INFO:Defining Hyperparameters
2024-01-16 16:48:28,766:INFO:Tuning with n_jobs=-1
2024-01-16 16:48:28,766:INFO:Initializing RandomizedSearchCV
2024-01-16 16:48:52,881:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:48:53,041:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:48:53,103:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:48:53,401:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:48:53,614:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:48:53,673:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:48:53,875:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:48:53,905:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:15,494:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:15,983:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:16,096:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:16,210:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:16,525:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:16,961:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:17,112:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:17,374:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:38,521:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:39,025:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:39,166:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:39,414:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:39,526:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:40,063:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:40,108:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:49:40,505:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:03,795:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:05,059:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:05,099:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:05,476:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:05,573:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:06,326:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:06,600:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:06,750:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:29,883:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:31,151:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:31,176:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:31,286:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:31,537:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:32,574:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:32,723:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:33,864:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:58,478:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:59,474:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:59,657:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:50:59,988:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:00,582:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:00,757:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:00,911:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:01,804:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:26,635:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:28,323:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:28,670:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:29,403:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:29,497:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:29,663:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:29,921:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:31,251:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:53,240:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:54,164:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:54,695:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:55,846:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:55,910:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:55,941:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:51:56,279:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:17,592:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:18,544:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:18,964:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:20,021:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:20,424:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:20,743:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:20,754:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:21,473:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:45,304:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:45,873:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:46,395:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:47,724:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:48,421:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:48,559:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:48,943:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:52:49,703:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:11,503:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:11,859:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:12,327:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:13,528:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:14,339:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:14,653:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:15,057:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:15,587:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:35,912:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:36,862:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:37,633:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:38,601:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:39,377:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:39,524:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:39,951:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:40,451:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:53,459:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:54,125:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:54,341:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:54,914:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:53:55,084:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 8.263}
2024-01-16 16:53:55,098:INFO:Hyperparameter search completed
2024-01-16 16:53:55,100:INFO:SubProcess create_model() called ==================================
2024-01-16 16:53:55,103:INFO:Initializing create_model()
2024-01-16 16:53:55,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177a74e80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': {}, 'C': 8.263})
2024-01-16 16:53:55,103:INFO:Checking exceptions
2024-01-16 16:53:55,103:INFO:Importing libraries
2024-01-16 16:53:55,104:INFO:Copying training dataset
2024-01-16 16:53:55,125:INFO:Defining folds
2024-01-16 16:53:55,126:INFO:Declaring metric variables
2024-01-16 16:53:55,134:INFO:Importing untrained model
2024-01-16 16:53:55,134:INFO:Declaring custom model
2024-01-16 16:53:55,136:INFO:Logistic Regression Imported successfully
2024-01-16 16:53:55,139:INFO:Starting cross validation
2024-01-16 16:53:55,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:54:19,479:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:19,639:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,677:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,685:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:19,704:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:54:19,725:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:19,727:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,826:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,845:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:19,867:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,867:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:19,870:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,871:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:19,897:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:54:19,913:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,925:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,958:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:54:19,975:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,983:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:19,988:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:19,992:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,016:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,034:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,035:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,059:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,067:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:54:20,077:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,082:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:54:20,084:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,097:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,120:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:20,127:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,161:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,196:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,228:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,262:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:20,281:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:54:20,295:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:31,420:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:31,495:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:31,520:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:31,538:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:54:31,550:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:32,049:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:32,119:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:32,141:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:32,153:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:54:32,162:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:54:32,300:INFO:Calculating mean and std
2024-01-16 16:54:32,303:INFO:Creating metrics dataframe
2024-01-16 16:54:32,314:INFO:Finalizing model
2024-01-16 16:54:54,517:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:54:54,546:INFO:Uploading results into container
2024-01-16 16:54:54,547:INFO:Uploading model into container now
2024-01-16 16:54:54,549:INFO:_master_model_container: 16
2024-01-16 16:54:54,549:INFO:_display_container: 4
2024-01-16 16:54:54,550:INFO:LogisticRegression(C=8.263, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 16:54:54,550:INFO:create_model() successfully completed......................................
2024-01-16 16:54:54,691:INFO:SubProcess create_model() end ==================================
2024-01-16 16:54:54,691:INFO:choose_better activated
2024-01-16 16:54:54,695:INFO:SubProcess create_model() called ==================================
2024-01-16 16:54:54,695:INFO:Initializing create_model()
2024-01-16 16:54:54,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 16:54:54,695:INFO:Checking exceptions
2024-01-16 16:54:54,697:INFO:Importing libraries
2024-01-16 16:54:54,697:INFO:Copying training dataset
2024-01-16 16:54:54,715:INFO:Defining folds
2024-01-16 16:54:54,715:INFO:Declaring metric variables
2024-01-16 16:54:54,715:INFO:Importing untrained model
2024-01-16 16:54:54,715:INFO:Declaring custom model
2024-01-16 16:54:54,716:INFO:Logistic Regression Imported successfully
2024-01-16 16:54:54,716:INFO:Starting cross validation
2024-01-16 16:54:54,717:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 16:55:18,141:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:18,303:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:18,304:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,342:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,350:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:18,370:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:18,393:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,414:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:18,469:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,532:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,563:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:18,583:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,584:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,630:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,671:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:18,671:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,686:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,711:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,730:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:18,730:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:18,749:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,748:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:18,866:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:18,869:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,900:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,907:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,927:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:18,943:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,945:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,968:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:18,984:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:18,995:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:19,027:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:19,032:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:19,048:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:19,063:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:19,204:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:19,241:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:19,270:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:30,370:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:30,403:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:30,438:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:30,461:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:30,471:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:30,474:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:30,483:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:30,493:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:30,506:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:30,516:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:30,660:INFO:Calculating mean and std
2024-01-16 16:55:30,661:INFO:Creating metrics dataframe
2024-01-16 16:55:30,666:INFO:Finalizing model
2024-01-16 16:55:52,294:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 16:55:52,301:INFO:Uploading results into container
2024-01-16 16:55:52,301:INFO:Uploading model into container now
2024-01-16 16:55:52,301:INFO:_master_model_container: 17
2024-01-16 16:55:52,301:INFO:_display_container: 5
2024-01-16 16:55:52,302:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 16:55:52,302:INFO:create_model() successfully completed......................................
2024-01-16 16:55:52,402:INFO:SubProcess create_model() end ==================================
2024-01-16 16:55:52,403:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.5454
2024-01-16 16:55:52,403:INFO:LogisticRegression(C=8.263, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.5459
2024-01-16 16:55:52,403:INFO:LogisticRegression(C=8.263, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-01-16 16:55:52,403:INFO:choose_better completed
2024-01-16 16:55:52,425:INFO:_master_model_container: 17
2024-01-16 16:55:52,425:INFO:_display_container: 4
2024-01-16 16:55:52,425:INFO:LogisticRegression(C=8.263, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 16:55:52,425:INFO:tune_model() successfully completed......................................
2024-01-16 16:55:52,511:INFO:Initializing evaluate_model()
2024-01-16 16:55:52,512:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=LogisticRegression(C=8.263, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-01-16 16:55:52,533:INFO:Initializing plot_model()
2024-01-16 16:55:52,534:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=8.263, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, system=True)
2024-01-16 16:55:52,534:INFO:Checking exceptions
2024-01-16 16:55:52,547:INFO:Preloading libraries
2024-01-16 16:55:52,547:INFO:Copying training dataset
2024-01-16 16:55:52,547:INFO:Plot type: pipeline
2024-01-16 16:55:52,739:INFO:Visual Rendered Successfully
2024-01-16 16:55:52,792:INFO:plot_model() successfully completed......................................
2024-01-16 16:55:52,793:INFO:Initializing predict_model()
2024-01-16 16:55:52,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1778e0550>, estimator=LogisticRegression(C=8.263, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5437, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11f2828b0>)
2024-01-16 16:55:52,794:INFO:Checking exceptions
2024-01-16 16:55:52,794:INFO:Preloading libraries
2024-01-16 16:55:52,794:INFO:Set up data.
2024-01-16 16:55:52,877:INFO:Set up index.
2024-01-16 16:55:53,984:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:54,339:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 16:55:54,539:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 16:55:54,696:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:35:54,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-16 17:35:54,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-16 17:35:54,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-16 17:35:54,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-01-16 17:35:58,068:INFO:PyCaret ClassificationExperiment
2024-01-16 17:35:58,068:INFO:Logging name: clf-default-name
2024-01-16 17:35:58,068:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-01-16 17:35:58,068:INFO:version 3.2.0
2024-01-16 17:35:58,068:INFO:Initializing setup()
2024-01-16 17:35:58,068:INFO:self.USI: 77d2
2024-01-16 17:35:58,068:INFO:self._variable_keys: {'pipeline', 'X', 'fold_groups_param', 'X_train', 'exp_name_log', 'USI', 'memory', 'gpu_n_jobs_param', 'html_param', 'n_jobs_param', 'y', 'y_test', 'exp_id', 'y_train', 'X_test', 'data', 'logging_param', 'fold_generator', 'is_multiclass', 'idx', 'target_param', '_ml_usecase', 'seed', 'gpu_param', 'fold_shuffle_param', '_available_plots', 'fix_imbalance', 'log_plots_param'}
2024-01-16 17:35:58,068:INFO:Checking environment
2024-01-16 17:35:58,068:INFO:python_version: 3.9.6
2024-01-16 17:35:58,068:INFO:python_build: ('default', 'Dec  7 2023 05:42:47')
2024-01-16 17:35:58,068:INFO:machine: arm64
2024-01-16 17:35:58,068:INFO:platform: macOS-14.2.1-arm64-arm-64bit
2024-01-16 17:35:58,068:INFO:Memory: svmem(total=8589934592, available=1824391168, percent=78.8, used=3485138944, free=57425920, active=1783676928, inactive=1671331840, wired=1701462016)
2024-01-16 17:35:58,068:INFO:Physical Core: 8
2024-01-16 17:35:58,068:INFO:Logical Core: 8
2024-01-16 17:35:58,068:INFO:Checking libraries
2024-01-16 17:35:58,069:INFO:System:
2024-01-16 17:35:58,069:INFO:    python: 3.9.6 (default, Dec  7 2023, 05:42:47)  [Clang 15.0.0 (clang-1500.1.0.2.5)]
2024-01-16 17:35:58,069:INFO:executable: /Applications/Xcode.app/Contents/Developer/usr/bin/python3
2024-01-16 17:35:58,069:INFO:   machine: macOS-14.2.1-arm64-arm-64bit
2024-01-16 17:35:58,069:INFO:PyCaret required dependencies:
2024-01-16 17:35:58,188:INFO:                 pip: 21.2.4
2024-01-16 17:35:58,188:INFO:          setuptools: 58.0.4
2024-01-16 17:35:58,188:INFO:             pycaret: 3.2.0
2024-01-16 17:35:58,188:INFO:             IPython: 8.11.0
2024-01-16 17:35:58,188:INFO:          ipywidgets: 8.1.1
2024-01-16 17:35:58,188:INFO:                tqdm: 4.66.1
2024-01-16 17:35:58,188:INFO:               numpy: 1.23.1
2024-01-16 17:35:58,188:INFO:              pandas: 1.5.3
2024-01-16 17:35:58,188:INFO:              jinja2: 3.1.2
2024-01-16 17:35:58,188:INFO:               scipy: 1.10.1
2024-01-16 17:35:58,188:INFO:              joblib: 1.3.2
2024-01-16 17:35:58,188:INFO:             sklearn: 1.2.2
2024-01-16 17:35:58,188:INFO:                pyod: 1.1.2
2024-01-16 17:35:58,188:INFO:            imblearn: 0.11.0
2024-01-16 17:35:58,188:INFO:   category_encoders: 2.6.3
2024-01-16 17:35:58,188:INFO:            lightgbm: 4.2.0
2024-01-16 17:35:58,188:INFO:               numba: 0.58.1
2024-01-16 17:35:58,188:INFO:            requests: 2.31.0
2024-01-16 17:35:58,189:INFO:          matplotlib: 3.6.0
2024-01-16 17:35:58,189:INFO:          scikitplot: 0.3.7
2024-01-16 17:35:58,189:INFO:         yellowbrick: 1.5
2024-01-16 17:35:58,189:INFO:              plotly: 5.18.0
2024-01-16 17:35:58,189:INFO:    plotly-resampler: Not installed
2024-01-16 17:35:58,189:INFO:             kaleido: 0.2.1
2024-01-16 17:35:58,189:INFO:           schemdraw: 0.15
2024-01-16 17:35:58,189:INFO:         statsmodels: 0.14.1
2024-01-16 17:35:58,189:INFO:              sktime: 0.21.1
2024-01-16 17:35:58,189:INFO:               tbats: 1.1.3
2024-01-16 17:35:58,189:INFO:            pmdarima: 2.0.4
2024-01-16 17:35:58,189:INFO:              psutil: 5.9.4
2024-01-16 17:35:58,189:INFO:          markupsafe: 2.1.3
2024-01-16 17:35:58,189:INFO:             pickle5: Not installed
2024-01-16 17:35:58,189:INFO:         cloudpickle: 3.0.0
2024-01-16 17:35:58,189:INFO:         deprecation: 2.1.0
2024-01-16 17:35:58,189:INFO:              xxhash: 3.4.1
2024-01-16 17:35:58,189:INFO:           wurlitzer: 3.0.3
2024-01-16 17:35:58,189:INFO:PyCaret optional dependencies:
2024-01-16 17:35:58,195:INFO:                shap: Not installed
2024-01-16 17:35:58,195:INFO:           interpret: Not installed
2024-01-16 17:35:58,195:INFO:                umap: Not installed
2024-01-16 17:35:58,195:INFO:     ydata_profiling: Not installed
2024-01-16 17:35:58,195:INFO:  explainerdashboard: Not installed
2024-01-16 17:35:58,195:INFO:             autoviz: Not installed
2024-01-16 17:35:58,195:INFO:           fairlearn: Not installed
2024-01-16 17:35:58,195:INFO:          deepchecks: Not installed
2024-01-16 17:35:58,195:INFO:             xgboost: Not installed
2024-01-16 17:35:58,195:INFO:            catboost: Not installed
2024-01-16 17:35:58,195:INFO:              kmodes: Not installed
2024-01-16 17:35:58,195:INFO:             mlxtend: Not installed
2024-01-16 17:35:58,195:INFO:       statsforecast: Not installed
2024-01-16 17:35:58,195:INFO:        tune_sklearn: Not installed
2024-01-16 17:35:58,195:INFO:                 ray: Not installed
2024-01-16 17:35:58,195:INFO:            hyperopt: Not installed
2024-01-16 17:35:58,195:INFO:              optuna: Not installed
2024-01-16 17:35:58,195:INFO:               skopt: Not installed
2024-01-16 17:35:58,195:INFO:              mlflow: Not installed
2024-01-16 17:35:58,195:INFO:              gradio: Not installed
2024-01-16 17:35:58,195:INFO:             fastapi: Not installed
2024-01-16 17:35:58,195:INFO:             uvicorn: Not installed
2024-01-16 17:35:58,195:INFO:              m2cgen: Not installed
2024-01-16 17:35:58,195:INFO:           evidently: Not installed
2024-01-16 17:35:58,195:INFO:               fugue: Not installed
2024-01-16 17:35:58,195:INFO:           streamlit: 1.28.2
2024-01-16 17:35:58,195:INFO:             prophet: Not installed
2024-01-16 17:35:58,195:INFO:None
2024-01-16 17:35:58,195:INFO:Set up data.
2024-01-16 17:35:58,273:INFO:Set up folding strategy.
2024-01-16 17:35:58,273:INFO:Set up train/test split.
2024-01-16 17:35:58,337:INFO:Set up index.
2024-01-16 17:35:58,338:INFO:Assigning column types.
2024-01-16 17:35:58,343:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-01-16 17:35:58,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-01-16 17:35:58,362:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-16 17:35:58,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,393:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-01-16 17:35:58,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-16 17:35:58,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,405:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-01-16 17:35:58,424:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-16 17:35:58,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,453:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-01-16 17:35:58,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,464:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-01-16 17:35:58,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:35:58,524:INFO:Preparing preprocessing pipeline...
2024-01-16 17:35:58,526:INFO:Set up label encoding.
2024-01-16 17:35:58,526:INFO:Set up simple imputation.
2024-01-16 17:35:58,531:INFO:Set up encoding of ordinal features.
2024-01-16 17:35:58,533:INFO:Set up encoding of categorical features.
2024-01-16 17:35:58,533:INFO:Set up column name cleaning.
2024-01-16 17:35:59,096:INFO:Finished creating preprocessing pipeline.
2024-01-16 17:35:59,105:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/vm/5qmxs2qx4jqfzfp5dmt_3x900000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['대출금액', '연간소득', '부채_대비_소득_비율',
                                             '총계좌수', '최근_2년간_연체_횟수', '총상환원금',
                                             '총상환이자', '총연체금액', '연체계좌수'],
                                    tr...
                 TransformerWrapper(exclude=None, include=['ID'],
                                    transformer=TargetEncoder(cols=['ID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-01-16 17:35:59,105:INFO:Creating final display dataframe.
2024-01-16 17:36:00,180:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      1065
1                        Target                                      대출등급
2                   Target type                                Multiclass
3                Target mapping  A: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6
4           Original data shape                               (96294, 15)
5        Transformed data shape                               (96294, 44)
6   Transformed train set shape                               (67405, 44)
7    Transformed test set shape                               (28889, 44)
8              Ordinal features                                         1
9              Numeric features                                         9
10         Categorical features                                         5
11                   Preprocess                                      True
12              Imputation type                                    simple
13           Numeric imputation                                      mean
14       Categorical imputation                                      mode
15     Maximum one-hot encoding                                        25
16              Encoding method                                      None
17               Fold Generator                           StratifiedKFold
18                  Fold Number                                        10
19                     CPU Jobs                                        -1
20                      Use GPU                                     False
21               Log Experiment                                     False
22              Experiment Name                          clf-default-name
23                          USI                                      77d2
2024-01-16 17:36:00,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:36:00,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:36:00,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:36:00,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-01-16 17:36:00,252:INFO:setup() successfully completed in 2.19s...............
2024-01-16 17:36:06,309:INFO:Initializing compare_models()
2024-01-16 17:36:06,310:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-01-16 17:36:06,310:INFO:Checking exceptions
2024-01-16 17:36:06,322:INFO:Preparing display monitor
2024-01-16 17:36:06,360:INFO:Initializing Logistic Regression
2024-01-16 17:36:06,361:INFO:Total runtime is 5.118052164713541e-06 minutes
2024-01-16 17:36:06,363:INFO:SubProcess create_model() called ==================================
2024-01-16 17:36:06,364:INFO:Initializing create_model()
2024-01-16 17:36:06,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:36:06,364:INFO:Checking exceptions
2024-01-16 17:36:06,364:INFO:Importing libraries
2024-01-16 17:36:06,364:INFO:Copying training dataset
2024-01-16 17:36:06,377:INFO:Defining folds
2024-01-16 17:36:06,377:INFO:Declaring metric variables
2024-01-16 17:36:06,379:INFO:Importing untrained model
2024-01-16 17:36:06,381:INFO:Logistic Regression Imported successfully
2024-01-16 17:36:06,383:INFO:Starting cross validation
2024-01-16 17:36:06,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:36:28,462:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:28,534:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:28,540:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:28,584:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,612:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,632:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:28,636:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,643:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,655:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:28,667:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,692:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,696:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,712:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:28,731:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,731:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,777:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,827:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,840:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:28,870:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:28,890:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:28,941:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:28,970:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,008:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:29,011:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,031:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:29,045:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,064:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,093:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,107:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:29,113:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,117:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,138:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,158:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:29,174:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,384:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:29,461:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,484:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:29,507:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:39,646:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:39,710:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:39,732:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:39,754:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:39,755:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:36:39,815:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:39,836:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:39,848:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:39,857:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:40,001:INFO:Calculating mean and std
2024-01-16 17:36:40,004:INFO:Creating metrics dataframe
2024-01-16 17:36:40,010:INFO:Uploading results into container
2024-01-16 17:36:40,011:INFO:Uploading model into container now
2024-01-16 17:36:40,012:INFO:_master_model_container: 1
2024-01-16 17:36:40,012:INFO:_display_container: 2
2024-01-16 17:36:40,013:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1065, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 17:36:40,013:INFO:create_model() successfully completed......................................
2024-01-16 17:36:40,083:INFO:SubProcess create_model() end ==================================
2024-01-16 17:36:40,083:INFO:Creating metrics dataframe
2024-01-16 17:36:40,087:INFO:Initializing K Neighbors Classifier
2024-01-16 17:36:40,087:INFO:Total runtime is 0.5621129989624024 minutes
2024-01-16 17:36:40,089:INFO:SubProcess create_model() called ==================================
2024-01-16 17:36:40,089:INFO:Initializing create_model()
2024-01-16 17:36:40,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:36:40,089:INFO:Checking exceptions
2024-01-16 17:36:40,089:INFO:Importing libraries
2024-01-16 17:36:40,089:INFO:Copying training dataset
2024-01-16 17:36:40,100:INFO:Defining folds
2024-01-16 17:36:40,100:INFO:Declaring metric variables
2024-01-16 17:36:40,101:INFO:Importing untrained model
2024-01-16 17:36:40,103:INFO:K Neighbors Classifier Imported successfully
2024-01-16 17:36:40,106:INFO:Starting cross validation
2024-01-16 17:36:40,108:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:36:45,833:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,866:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,869:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,886:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,896:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,902:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,911:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,914:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:45,932:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,940:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,988:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:45,989:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,019:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,019:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,044:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,053:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,074:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,105:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,124:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:46,137:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,153:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,178:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,191:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:46,202:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,256:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,281:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:46,295:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:46,305:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:49,179:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:49,192:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:49,201:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:49,214:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:49,223:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:49,235:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:49,384:INFO:Calculating mean and std
2024-01-16 17:36:49,384:INFO:Creating metrics dataframe
2024-01-16 17:36:49,390:INFO:Uploading results into container
2024-01-16 17:36:49,390:INFO:Uploading model into container now
2024-01-16 17:36:49,391:INFO:_master_model_container: 2
2024-01-16 17:36:49,391:INFO:_display_container: 2
2024-01-16 17:36:49,392:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-01-16 17:36:49,392:INFO:create_model() successfully completed......................................
2024-01-16 17:36:49,454:INFO:SubProcess create_model() end ==================================
2024-01-16 17:36:49,454:INFO:Creating metrics dataframe
2024-01-16 17:36:49,458:INFO:Initializing Naive Bayes
2024-01-16 17:36:49,458:INFO:Total runtime is 0.718302349249522 minutes
2024-01-16 17:36:49,460:INFO:SubProcess create_model() called ==================================
2024-01-16 17:36:49,460:INFO:Initializing create_model()
2024-01-16 17:36:49,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:36:49,460:INFO:Checking exceptions
2024-01-16 17:36:49,460:INFO:Importing libraries
2024-01-16 17:36:49,460:INFO:Copying training dataset
2024-01-16 17:36:49,473:INFO:Defining folds
2024-01-16 17:36:49,473:INFO:Declaring metric variables
2024-01-16 17:36:49,474:INFO:Importing untrained model
2024-01-16 17:36:49,476:INFO:Naive Bayes Imported successfully
2024-01-16 17:36:49,479:INFO:Starting cross validation
2024-01-16 17:36:49,481:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:36:50,696:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,727:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,739:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,743:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,766:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,769:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,797:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,798:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,810:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,829:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,865:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,869:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,876:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,878:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,897:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,897:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,901:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,906:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,911:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,924:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,931:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,936:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,940:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:50,964:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:51,318:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:51,334:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:51,340:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:51,355:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:51,361:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:51,376:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:51,514:INFO:Calculating mean and std
2024-01-16 17:36:51,518:INFO:Creating metrics dataframe
2024-01-16 17:36:51,524:INFO:Uploading results into container
2024-01-16 17:36:51,524:INFO:Uploading model into container now
2024-01-16 17:36:51,525:INFO:_master_model_container: 3
2024-01-16 17:36:51,525:INFO:_display_container: 2
2024-01-16 17:36:51,525:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-01-16 17:36:51,526:INFO:create_model() successfully completed......................................
2024-01-16 17:36:51,599:INFO:SubProcess create_model() end ==================================
2024-01-16 17:36:51,599:INFO:Creating metrics dataframe
2024-01-16 17:36:51,603:INFO:Initializing Decision Tree Classifier
2024-01-16 17:36:51,603:INFO:Total runtime is 0.7540486017862956 minutes
2024-01-16 17:36:51,605:INFO:SubProcess create_model() called ==================================
2024-01-16 17:36:51,605:INFO:Initializing create_model()
2024-01-16 17:36:51,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:36:51,605:INFO:Checking exceptions
2024-01-16 17:36:51,606:INFO:Importing libraries
2024-01-16 17:36:51,606:INFO:Copying training dataset
2024-01-16 17:36:51,616:INFO:Defining folds
2024-01-16 17:36:51,616:INFO:Declaring metric variables
2024-01-16 17:36:51,618:INFO:Importing untrained model
2024-01-16 17:36:51,619:INFO:Decision Tree Classifier Imported successfully
2024-01-16 17:36:51,622:INFO:Starting cross validation
2024-01-16 17:36:51,623:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:36:52,812:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,842:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,844:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,856:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,863:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,864:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:52,874:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,876:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,886:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,893:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,898:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:52,902:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:52,914:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,918:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,925:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:52,930:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,934:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,948:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,948:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,959:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,974:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,979:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:52,984:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,989:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:52,994:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:52,999:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,006:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:53,017:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,024:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,048:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,060:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:53,069:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,451:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,455:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,472:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,475:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,483:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:53,486:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:36:53,492:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,495:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:36:53,631:INFO:Calculating mean and std
2024-01-16 17:36:53,634:INFO:Creating metrics dataframe
2024-01-16 17:36:53,639:INFO:Uploading results into container
2024-01-16 17:36:53,640:INFO:Uploading model into container now
2024-01-16 17:36:53,640:INFO:_master_model_container: 4
2024-01-16 17:36:53,641:INFO:_display_container: 2
2024-01-16 17:36:53,641:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1065, splitter='best')
2024-01-16 17:36:53,641:INFO:create_model() successfully completed......................................
2024-01-16 17:36:53,712:INFO:SubProcess create_model() end ==================================
2024-01-16 17:36:53,712:INFO:Creating metrics dataframe
2024-01-16 17:36:53,716:INFO:Initializing SVM - Linear Kernel
2024-01-16 17:36:53,716:INFO:Total runtime is 0.7892665704091391 minutes
2024-01-16 17:36:53,718:INFO:SubProcess create_model() called ==================================
2024-01-16 17:36:53,718:INFO:Initializing create_model()
2024-01-16 17:36:53,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:36:53,718:INFO:Checking exceptions
2024-01-16 17:36:53,718:INFO:Importing libraries
2024-01-16 17:36:53,718:INFO:Copying training dataset
2024-01-16 17:36:53,728:INFO:Defining folds
2024-01-16 17:36:53,729:INFO:Declaring metric variables
2024-01-16 17:36:53,730:INFO:Importing untrained model
2024-01-16 17:36:53,731:INFO:SVM - Linear Kernel Imported successfully
2024-01-16 17:36:53,735:INFO:Starting cross validation
2024-01-16 17:36:53,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:37:00,301:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:00,311:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,334:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,348:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:00,358:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,820:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:00,830:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,847:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:00,853:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:00,856:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,857:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,866:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,879:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,883:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:00,891:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,896:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,898:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:00,906:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:00,909:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,920:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,951:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:00,963:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:00,967:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,974:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:00,989:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:01,000:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:01,001:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:01,013:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:01,024:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:01,025:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:01,228:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:01,240:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:01,262:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:01,278:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:01,288:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:01,533:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:01,547:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:01,571:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:01,584:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:01,594:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:02,808:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:02,817:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:02,838:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:02,849:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:02,858:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:02,881:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-01-16 17:37:02,890:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:02,911:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:02,923:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:02,932:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:03,069:INFO:Calculating mean and std
2024-01-16 17:37:03,072:INFO:Creating metrics dataframe
2024-01-16 17:37:03,077:INFO:Uploading results into container
2024-01-16 17:37:03,078:INFO:Uploading model into container now
2024-01-16 17:37:03,079:INFO:_master_model_container: 5
2024-01-16 17:37:03,079:INFO:_display_container: 2
2024-01-16 17:37:03,080:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1065, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-01-16 17:37:03,080:INFO:create_model() successfully completed......................................
2024-01-16 17:37:03,152:INFO:SubProcess create_model() end ==================================
2024-01-16 17:37:03,152:INFO:Creating metrics dataframe
2024-01-16 17:37:03,157:INFO:Initializing Ridge Classifier
2024-01-16 17:37:03,157:INFO:Total runtime is 0.9466152866681418 minutes
2024-01-16 17:37:03,159:INFO:SubProcess create_model() called ==================================
2024-01-16 17:37:03,159:INFO:Initializing create_model()
2024-01-16 17:37:03,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:37:03,159:INFO:Checking exceptions
2024-01-16 17:37:03,159:INFO:Importing libraries
2024-01-16 17:37:03,159:INFO:Copying training dataset
2024-01-16 17:37:03,171:INFO:Defining folds
2024-01-16 17:37:03,171:INFO:Declaring metric variables
2024-01-16 17:37:03,172:INFO:Importing untrained model
2024-01-16 17:37:03,174:INFO:Ridge Classifier Imported successfully
2024-01-16 17:37:03,177:INFO:Starting cross validation
2024-01-16 17:37:03,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:37:04,183:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.43322e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:04,326:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.2349e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:04,335:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:04,349:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.2769e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:04,350:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,412:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,440:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:04,457:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,458:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:04,473:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.53521e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:04,476:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.25779e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:04,485:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:04,497:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,512:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,521:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.44752e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:04,530:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:04,533:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,542:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,542:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,545:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:04,551:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:04,556:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,564:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,566:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.42743e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:04,567:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:04,577:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,583:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,589:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,594:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:04,600:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.28341e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:04,605:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:04,606:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:04,609:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,615:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,616:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,627:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:04,641:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,642:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,652:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:04,658:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:04,661:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,670:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,673:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,685:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:04,688:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,696:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,704:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:04,714:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:04,972:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.24283e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:05,006:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.24232e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-01-16 17:37:05,016:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:05,025:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:05,040:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/being/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-01-16 17:37:05,046:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:05,049:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:05,059:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:05,068:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:05,071:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:05,083:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:05,092:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:05,231:INFO:Calculating mean and std
2024-01-16 17:37:05,233:INFO:Creating metrics dataframe
2024-01-16 17:37:05,238:INFO:Uploading results into container
2024-01-16 17:37:05,239:INFO:Uploading model into container now
2024-01-16 17:37:05,240:INFO:_master_model_container: 6
2024-01-16 17:37:05,240:INFO:_display_container: 2
2024-01-16 17:37:05,241:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1065, solver='auto',
                tol=0.0001)
2024-01-16 17:37:05,241:INFO:create_model() successfully completed......................................
2024-01-16 17:37:05,318:INFO:SubProcess create_model() end ==================================
2024-01-16 17:37:05,318:INFO:Creating metrics dataframe
2024-01-16 17:37:05,323:INFO:Initializing Random Forest Classifier
2024-01-16 17:37:05,323:INFO:Total runtime is 0.9827166875203451 minutes
2024-01-16 17:37:05,325:INFO:SubProcess create_model() called ==================================
2024-01-16 17:37:05,325:INFO:Initializing create_model()
2024-01-16 17:37:05,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:37:05,325:INFO:Checking exceptions
2024-01-16 17:37:05,325:INFO:Importing libraries
2024-01-16 17:37:05,325:INFO:Copying training dataset
2024-01-16 17:37:05,339:INFO:Defining folds
2024-01-16 17:37:05,339:INFO:Declaring metric variables
2024-01-16 17:37:05,341:INFO:Importing untrained model
2024-01-16 17:37:05,344:INFO:Random Forest Classifier Imported successfully
2024-01-16 17:37:05,348:INFO:Starting cross validation
2024-01-16 17:37:05,350:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:37:13,670:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:13,699:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:13,813:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:13,826:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:13,835:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:13,879:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:13,888:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:13,922:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:13,965:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,009:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,061:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,166:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,194:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:14,240:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:14,249:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,252:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,260:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,294:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,312:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,332:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,347:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:14,359:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:14,369:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,390:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,519:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,543:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,548:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,556:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:14,566:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,571:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:14,583:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:14,594:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:16,786:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:16,807:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:16,817:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:16,819:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:16,828:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:16,838:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:16,850:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:16,858:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:17,002:INFO:Calculating mean and std
2024-01-16 17:37:17,004:INFO:Creating metrics dataframe
2024-01-16 17:37:17,010:INFO:Uploading results into container
2024-01-16 17:37:17,011:INFO:Uploading model into container now
2024-01-16 17:37:17,013:INFO:_master_model_container: 7
2024-01-16 17:37:17,013:INFO:_display_container: 2
2024-01-16 17:37:17,014:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1065, verbose=0, warm_start=False)
2024-01-16 17:37:17,015:INFO:create_model() successfully completed......................................
2024-01-16 17:37:17,079:INFO:SubProcess create_model() end ==================================
2024-01-16 17:37:17,079:INFO:Creating metrics dataframe
2024-01-16 17:37:17,084:INFO:Initializing Quadratic Discriminant Analysis
2024-01-16 17:37:17,084:INFO:Total runtime is 1.178724765777588 minutes
2024-01-16 17:37:17,085:INFO:SubProcess create_model() called ==================================
2024-01-16 17:37:17,086:INFO:Initializing create_model()
2024-01-16 17:37:17,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:37:17,086:INFO:Checking exceptions
2024-01-16 17:37:17,086:INFO:Importing libraries
2024-01-16 17:37:17,086:INFO:Copying training dataset
2024-01-16 17:37:17,097:INFO:Defining folds
2024-01-16 17:37:17,097:INFO:Declaring metric variables
2024-01-16 17:37:17,098:INFO:Importing untrained model
2024-01-16 17:37:17,099:INFO:Quadratic Discriminant Analysis Imported successfully
2024-01-16 17:37:17,102:INFO:Starting cross validation
2024-01-16 17:37:17,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:37:18,224:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:18,378:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:18,382:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:18,436:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:18,634:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:18,652:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:18,663:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,689:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:18,714:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:18,716:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,745:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:18,777:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,777:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,779:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,787:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,801:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,808:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,825:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:18,826:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,826:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:18,839:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,842:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,846:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:18,857:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,936:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,965:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,976:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,977:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:18,982:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,996:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:18,999:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,008:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,009:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,017:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:19,022:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:19,029:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,034:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,035:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,047:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:19,061:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,296:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:19,337:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-01-16 17:37:19,448:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,469:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,481:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:19,482:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,490:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,503:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,516:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:19,525:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:19,668:INFO:Calculating mean and std
2024-01-16 17:37:19,671:INFO:Creating metrics dataframe
2024-01-16 17:37:19,678:INFO:Uploading results into container
2024-01-16 17:37:19,678:INFO:Uploading model into container now
2024-01-16 17:37:19,680:INFO:_master_model_container: 8
2024-01-16 17:37:19,680:INFO:_display_container: 2
2024-01-16 17:37:19,681:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-01-16 17:37:19,681:INFO:create_model() successfully completed......................................
2024-01-16 17:37:19,750:INFO:SubProcess create_model() end ==================================
2024-01-16 17:37:19,751:INFO:Creating metrics dataframe
2024-01-16 17:37:19,756:INFO:Initializing Ada Boost Classifier
2024-01-16 17:37:19,756:INFO:Total runtime is 1.2232627669970195 minutes
2024-01-16 17:37:19,758:INFO:SubProcess create_model() called ==================================
2024-01-16 17:37:19,758:INFO:Initializing create_model()
2024-01-16 17:37:19,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:37:19,758:INFO:Checking exceptions
2024-01-16 17:37:19,758:INFO:Importing libraries
2024-01-16 17:37:19,758:INFO:Copying training dataset
2024-01-16 17:37:19,768:INFO:Defining folds
2024-01-16 17:37:19,768:INFO:Declaring metric variables
2024-01-16 17:37:19,769:INFO:Importing untrained model
2024-01-16 17:37:19,771:INFO:Ada Boost Classifier Imported successfully
2024-01-16 17:37:19,774:INFO:Starting cross validation
2024-01-16 17:37:19,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:37:24,478:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,501:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,515:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:24,544:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,557:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,560:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,593:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,594:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,594:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,596:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,604:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,610:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:24,616:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:24,626:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,630:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,631:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,637:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,643:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,656:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:24,662:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:24,665:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:24,670:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,672:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,677:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,685:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,716:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,730:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:24,740:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,772:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,796:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:24,809:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:24,819:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:27,159:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:27,180:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:27,192:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:27,201:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:27,202:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:27,223:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:27,235:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:37:27,243:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:37:27,384:INFO:Calculating mean and std
2024-01-16 17:37:27,385:INFO:Creating metrics dataframe
2024-01-16 17:37:27,392:INFO:Uploading results into container
2024-01-16 17:37:27,393:INFO:Uploading model into container now
2024-01-16 17:37:27,393:INFO:_master_model_container: 9
2024-01-16 17:37:27,394:INFO:_display_container: 2
2024-01-16 17:37:27,394:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1065)
2024-01-16 17:37:27,394:INFO:create_model() successfully completed......................................
2024-01-16 17:37:27,463:INFO:SubProcess create_model() end ==================================
2024-01-16 17:37:27,463:INFO:Creating metrics dataframe
2024-01-16 17:37:27,468:INFO:Initializing Gradient Boosting Classifier
2024-01-16 17:37:27,468:INFO:Total runtime is 1.3518041173617046 minutes
2024-01-16 17:37:27,470:INFO:SubProcess create_model() called ==================================
2024-01-16 17:37:27,470:INFO:Initializing create_model()
2024-01-16 17:37:27,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:37:27,470:INFO:Checking exceptions
2024-01-16 17:37:27,470:INFO:Importing libraries
2024-01-16 17:37:27,471:INFO:Copying training dataset
2024-01-16 17:37:27,481:INFO:Defining folds
2024-01-16 17:37:27,481:INFO:Declaring metric variables
2024-01-16 17:37:27,482:INFO:Importing untrained model
2024-01-16 17:37:27,484:INFO:Gradient Boosting Classifier Imported successfully
2024-01-16 17:37:27,486:INFO:Starting cross validation
2024-01-16 17:37:27,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:38:43,680:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:43,716:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:43,739:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:38:43,757:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,426:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,458:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,473:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:38:44,489:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,582:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,648:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,667:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:38:44,691:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,835:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,839:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,876:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,876:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,898:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:38:44,898:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:38:44,909:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,913:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,921:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,948:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,967:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:38:44,970:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,979:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:44,997:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:45,017:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:38:45,028:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:45,338:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:45,362:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:38:45,376:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:38:45,385:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:30,312:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:30,334:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:30,346:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:30,354:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:30,672:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:30,692:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:30,703:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:30,711:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:30,849:INFO:Calculating mean and std
2024-01-16 17:39:30,863:INFO:Creating metrics dataframe
2024-01-16 17:39:30,871:INFO:Uploading results into container
2024-01-16 17:39:30,871:INFO:Uploading model into container now
2024-01-16 17:39:30,873:INFO:_master_model_container: 10
2024-01-16 17:39:30,873:INFO:_display_container: 2
2024-01-16 17:39:30,874:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1065, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-01-16 17:39:30,874:INFO:create_model() successfully completed......................................
2024-01-16 17:39:30,972:INFO:SubProcess create_model() end ==================================
2024-01-16 17:39:30,972:INFO:Creating metrics dataframe
2024-01-16 17:39:30,980:INFO:Initializing Linear Discriminant Analysis
2024-01-16 17:39:30,980:INFO:Total runtime is 3.410329083601634 minutes
2024-01-16 17:39:30,982:INFO:SubProcess create_model() called ==================================
2024-01-16 17:39:30,982:INFO:Initializing create_model()
2024-01-16 17:39:30,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:39:30,982:INFO:Checking exceptions
2024-01-16 17:39:30,982:INFO:Importing libraries
2024-01-16 17:39:30,982:INFO:Copying training dataset
2024-01-16 17:39:30,993:INFO:Defining folds
2024-01-16 17:39:30,993:INFO:Declaring metric variables
2024-01-16 17:39:30,994:INFO:Importing untrained model
2024-01-16 17:39:30,996:INFO:Linear Discriminant Analysis Imported successfully
2024-01-16 17:39:30,998:INFO:Starting cross validation
2024-01-16 17:39:31,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:39:32,690:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,722:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,752:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:32,767:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,789:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,799:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,830:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,834:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,850:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:32,870:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:32,884:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,884:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,931:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,931:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,945:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,953:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,962:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,967:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,969:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:32,975:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,973:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,979:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,987:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:32,988:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:32,998:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:32,998:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,003:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,005:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,014:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:33,021:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:33,027:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,035:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,582:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,604:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,616:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:33,625:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,628:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,648:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,660:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:33,669:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:33,806:INFO:Calculating mean and std
2024-01-16 17:39:33,810:INFO:Creating metrics dataframe
2024-01-16 17:39:33,815:INFO:Uploading results into container
2024-01-16 17:39:33,816:INFO:Uploading model into container now
2024-01-16 17:39:33,817:INFO:_master_model_container: 11
2024-01-16 17:39:33,817:INFO:_display_container: 2
2024-01-16 17:39:33,818:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-01-16 17:39:33,818:INFO:create_model() successfully completed......................................
2024-01-16 17:39:33,882:INFO:SubProcess create_model() end ==================================
2024-01-16 17:39:33,882:INFO:Creating metrics dataframe
2024-01-16 17:39:33,887:INFO:Initializing Extra Trees Classifier
2024-01-16 17:39:33,888:INFO:Total runtime is 3.458787786960602 minutes
2024-01-16 17:39:33,889:INFO:SubProcess create_model() called ==================================
2024-01-16 17:39:33,889:INFO:Initializing create_model()
2024-01-16 17:39:33,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:39:33,890:INFO:Checking exceptions
2024-01-16 17:39:33,890:INFO:Importing libraries
2024-01-16 17:39:33,890:INFO:Copying training dataset
2024-01-16 17:39:33,901:INFO:Defining folds
2024-01-16 17:39:33,901:INFO:Declaring metric variables
2024-01-16 17:39:33,902:INFO:Importing untrained model
2024-01-16 17:39:33,903:INFO:Extra Trees Classifier Imported successfully
2024-01-16 17:39:33,907:INFO:Starting cross validation
2024-01-16 17:39:33,909:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:39:42,208:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,246:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,276:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,286:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,307:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,322:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,326:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,339:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,341:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:42,341:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:42,345:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:42,356:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,356:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,362:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,366:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:42,483:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,699:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,707:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,724:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,729:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,742:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:42,747:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:42,751:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,756:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,771:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,798:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,813:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,831:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:42,835:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,842:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:42,848:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:42,859:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:47,013:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:47,064:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:47,084:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:47,100:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:47,105:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:47,133:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:47,148:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:39:47,161:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:39:47,328:INFO:Calculating mean and std
2024-01-16 17:39:47,435:INFO:Creating metrics dataframe
2024-01-16 17:39:47,524:INFO:Uploading results into container
2024-01-16 17:39:47,525:INFO:Uploading model into container now
2024-01-16 17:39:47,525:INFO:_master_model_container: 12
2024-01-16 17:39:47,525:INFO:_display_container: 2
2024-01-16 17:39:47,525:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1065, verbose=0, warm_start=False)
2024-01-16 17:39:47,526:INFO:create_model() successfully completed......................................
2024-01-16 17:39:47,658:INFO:SubProcess create_model() end ==================================
2024-01-16 17:39:47,658:INFO:Creating metrics dataframe
2024-01-16 17:39:47,668:INFO:Initializing Light Gradient Boosting Machine
2024-01-16 17:39:47,668:INFO:Total runtime is 3.688468917210897 minutes
2024-01-16 17:39:47,670:INFO:SubProcess create_model() called ==================================
2024-01-16 17:39:47,670:INFO:Initializing create_model()
2024-01-16 17:39:47,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:39:47,670:INFO:Checking exceptions
2024-01-16 17:39:47,670:INFO:Importing libraries
2024-01-16 17:39:47,670:INFO:Copying training dataset
2024-01-16 17:39:47,683:INFO:Defining folds
2024-01-16 17:39:47,683:INFO:Declaring metric variables
2024-01-16 17:39:47,685:INFO:Importing untrained model
2024-01-16 17:39:47,689:INFO:Light Gradient Boosting Machine Imported successfully
2024-01-16 17:39:47,694:INFO:Starting cross validation
2024-01-16 17:39:47,697:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:39:59,963:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,041:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,055:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:00,081:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,180:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,281:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,297:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:00,307:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,327:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,402:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,429:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:00,454:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,818:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,860:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,873:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,883:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:00,894:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,898:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:00,911:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:00,922:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:01,225:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:01,251:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:01,285:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:01,323:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:01,740:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:01,776:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:01,847:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:01,885:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:02,114:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:02,138:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:02,152:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:02,162:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:04,187:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:04,210:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:04,223:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:04,233:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:04,460:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:04,481:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:04,494:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:04,503:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:04,640:INFO:Calculating mean and std
2024-01-16 17:40:04,643:INFO:Creating metrics dataframe
2024-01-16 17:40:04,651:INFO:Uploading results into container
2024-01-16 17:40:04,652:INFO:Uploading model into container now
2024-01-16 17:40:04,653:INFO:_master_model_container: 13
2024-01-16 17:40:04,653:INFO:_display_container: 2
2024-01-16 17:40:04,654:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1065, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-01-16 17:40:04,654:INFO:create_model() successfully completed......................................
2024-01-16 17:40:04,720:INFO:SubProcess create_model() end ==================================
2024-01-16 17:40:04,720:INFO:Creating metrics dataframe
2024-01-16 17:40:04,727:INFO:Initializing Dummy Classifier
2024-01-16 17:40:04,727:INFO:Total runtime is 3.9727837999661766 minutes
2024-01-16 17:40:04,729:INFO:SubProcess create_model() called ==================================
2024-01-16 17:40:04,729:INFO:Initializing create_model()
2024-01-16 17:40:04,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11dc136a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:40:04,729:INFO:Checking exceptions
2024-01-16 17:40:04,729:INFO:Importing libraries
2024-01-16 17:40:04,729:INFO:Copying training dataset
2024-01-16 17:40:04,741:INFO:Defining folds
2024-01-16 17:40:04,741:INFO:Declaring metric variables
2024-01-16 17:40:04,742:INFO:Importing untrained model
2024-01-16 17:40:04,744:INFO:Dummy Classifier Imported successfully
2024-01-16 17:40:04,747:INFO:Starting cross validation
2024-01-16 17:40:04,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:40:05,744:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,771:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,776:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,802:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:05,809:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,814:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,816:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,825:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,832:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:05,835:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,848:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,852:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:05,856:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,871:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,884:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:05,898:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,915:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,974:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:05,995:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:06,005:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,008:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,037:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,051:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,057:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:06,067:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,077:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,081:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,093:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:06,103:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,107:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,122:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:06,132:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,451:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,459:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,473:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,481:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,486:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:06,492:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:40:06,495:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,501:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:40:06,634:INFO:Calculating mean and std
2024-01-16 17:40:06,635:INFO:Creating metrics dataframe
2024-01-16 17:40:06,651:INFO:Uploading results into container
2024-01-16 17:40:06,652:INFO:Uploading model into container now
2024-01-16 17:40:06,653:INFO:_master_model_container: 14
2024-01-16 17:40:06,653:INFO:_display_container: 2
2024-01-16 17:40:06,654:INFO:DummyClassifier(constant=None, random_state=1065, strategy='prior')
2024-01-16 17:40:06,654:INFO:create_model() successfully completed......................................
2024-01-16 17:40:06,719:INFO:SubProcess create_model() end ==================================
2024-01-16 17:40:06,719:INFO:Creating metrics dataframe
2024-01-16 17:40:06,729:INFO:Initializing create_model()
2024-01-16 17:40:06,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1065, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:40:06,729:INFO:Checking exceptions
2024-01-16 17:40:06,730:INFO:Importing libraries
2024-01-16 17:40:06,730:INFO:Copying training dataset
2024-01-16 17:40:06,741:INFO:Defining folds
2024-01-16 17:40:06,741:INFO:Declaring metric variables
2024-01-16 17:40:06,741:INFO:Importing untrained model
2024-01-16 17:40:06,741:INFO:Declaring custom model
2024-01-16 17:40:06,741:INFO:Logistic Regression Imported successfully
2024-01-16 17:40:06,745:INFO:Cross validation set to False
2024-01-16 17:40:06,745:INFO:Fitting Model
2024-01-16 17:40:26,075:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:40:26,081:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1065, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 17:40:26,081:INFO:create_model() successfully completed......................................
2024-01-16 17:40:26,151:INFO:_master_model_container: 14
2024-01-16 17:40:26,151:INFO:_display_container: 2
2024-01-16 17:40:26,152:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1065, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 17:40:26,152:INFO:compare_models() successfully completed......................................
2024-01-16 17:43:06,991:INFO:Initializing create_model()
2024-01-16 17:43:06,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1747732b0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1065, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-01-16 17:43:06,993:INFO:Checking exceptions
2024-01-16 17:43:07,008:INFO:Importing libraries
2024-01-16 17:43:07,009:INFO:Copying training dataset
2024-01-16 17:43:07,025:INFO:Defining folds
2024-01-16 17:43:07,025:INFO:Declaring metric variables
2024-01-16 17:43:07,027:INFO:Importing untrained model
2024-01-16 17:43:07,027:INFO:Declaring custom model
2024-01-16 17:43:07,028:INFO:Logistic Regression Imported successfully
2024-01-16 17:43:07,031:INFO:Starting cross validation
2024-01-16 17:43:07,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-01-16 17:43:26,330:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:26,342:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:26,382:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:26,451:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,458:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,488:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,491:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,503:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,508:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:43:26,510:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:43:26,521:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,529:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,530:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,552:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:43:26,565:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,615:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:26,675:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:26,738:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,761:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:26,775:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,801:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,821:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,829:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:26,859:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,877:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:43:26,893:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,896:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,927:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,947:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:43:26,952:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,961:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:26,990:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:27,010:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:43:27,021:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:27,177:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:27,264:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:27,287:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:27,311:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:37,292:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:37,351:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:37,373:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:37,389:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:43:37,394:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:37,443:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:37,463:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:37,475:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-01-16 17:43:37,484:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'G') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-01-16 17:43:37,626:INFO:Calculating mean and std
2024-01-16 17:43:37,628:INFO:Creating metrics dataframe
2024-01-16 17:43:37,635:INFO:Finalizing model
2024-01-16 17:44:00,261:WARNING:/Users/being/Library/Python/3.9/lib/python/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-01-16 17:44:00,304:INFO:Uploading results into container
2024-01-16 17:44:00,305:INFO:Uploading model into container now
2024-01-16 17:44:00,372:INFO:_master_model_container: 15
2024-01-16 17:44:00,373:INFO:_display_container: 3
2024-01-16 17:44:00,373:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1065, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-01-16 17:44:00,373:INFO:create_model() successfully completed......................................
